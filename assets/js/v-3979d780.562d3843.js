"use strict";(self.webpackChunkMysql_Learn=self.webpackChunkMysql_Learn||[]).push([[226],{1468:(e,s,a)=>{a.r(s),a.d(s,{data:()=>l});const l={key:"v-3979d780",path:"/guide/%E3%80%8AMysql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E3%80%8B/%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9A%E6%8E%92%E5%BA%8F%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE.html",title:"第四章：排序检索数据",lang:"en-US",frontmatter:{title:"第四章：排序检索数据",lang:"en-US"},excerpt:"",headers:[{level:2,title:"排序数据",slug:"排序数据",children:[]},{level:2,title:"多列排序",slug:"多列排序",children:[]},{level:2,title:"按照指定顺序排序 DESC、ASC、LIMIT",slug:"按照指定顺序排序-desc、asc、limit",children:[]}],filePathRelative:"guide/《Mysql必知必会》/第四章：排序检索数据.md",git:{updatedTime:1635847604e3,contributors:[{name:"Sue-52",email:"1219243947@qq.com",commits:1}]}}},5613:(e,s,a)=>{a.r(s),a.d(s,{default:()=>r});const l=(0,a(6252).uE)('<h1 id="第四章-排序检索数据-select-order-by" tabindex="-1"><a class="header-anchor" href="#第四章-排序检索数据-select-order-by" aria-hidden="true">#</a> 第四章： 排序检索数据 SELECT ... ORDER BY ...</h1><p>其实，检索出来的数据并不是以纯粹的随即顺序显示的。如果不排序，数据一般将以它的底层表中出现的顺序显示。这可以是数据最初添加到表中的顺序。但是，如果数据后来进行过更新或删除，则此顺序将会受到 <code>MySQL</code> 重用回收存储空间的影响。因此，如果不明确控制的话，不能（也不应该）依赖该排序顺序。关系数据库设计理论认为，如果不明确规定排序顺序，则不应该假定检索出的数据的顺序有意义。</p><p><strong>子句（clause）：</strong> SQL 语句由子句构成，有些子句是必要的，有的是可选的。一个字句通常由一个关键字和所提供的数据组成。</p><p>其中 <code>ORDER BY</code> 子句，取一个或者多个列的名字，根据列输出对应序列的排序。</p><h2 id="排序数据" tabindex="-1"><a class="header-anchor" href="#排序数据" aria-hidden="true">#</a> 排序数据</h2><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>select 列名 from 表名 order by 表名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292230781.png" alt="image-20211013203837684"></p><h2 id="多列排序" tabindex="-1"><a class="header-anchor" href="#多列排序" aria-hidden="true">#</a> 多列排序</h2><p>按不止一个列进行数据排序。</p><p>为了按多个列排序，只要指定列名，列名之间用逗号分开即可（就像选择多个列时所做的那样）。</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>select 列名1，列名2... from 表名 order by 列名1，列名2...;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292230782.png" alt="image-20211013211053126"></p><h2 id="按照指定顺序排序-desc、asc、limit" tabindex="-1"><a class="header-anchor" href="#按照指定顺序排序-desc、asc、limit" aria-hidden="true">#</a> 按照指定顺序排序 DESC、ASC、LIMIT</h2><p>DESC：使列表降序排列 ASC：使列表升序排列（默认即为升序） LIMIT：限制显示的数量（必须位于ORDER BY之后）</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>-- 语法\nselect 列名1，列名2... from 表名 order by 列名1，列名2... limit 数量;\n\n-- 检索\nselect id,name,code from cities order by name desc limit 10;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292230783.png" alt="image-20211013211618969"></p>',16),n={},r=(0,a(3744).Z)(n,[["render",function(e,s){return l}]])},3744:(e,s)=>{s.Z=(e,s)=>{const a=e.__vccOpts||e;for(const[e,l]of s)a[e]=l;return a}}}]);