"use strict";(self.webpackChunkMysql_Learn=self.webpackChunkMysql_Learn||[]).push([[186],{9151:(e,s,n)=>{n.r(s),n.d(s,{data:()=>l});const l={key:"v-2f892bd3",path:"/guide/%E3%80%8AMysql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E3%80%8B/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E7%AB%A0%EF%BC%9AMysql%20%E8%A7%86%E5%9B%BE.html",title:"第二十一章：Mysql 视图",lang:"en-US",frontmatter:{title:"第二十一章：Mysql 视图",lang:"en-US"},excerpt:"",headers:[{level:2,title:"规则和限制",slug:"规则和限制",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"利用视图简化复杂的联结",slug:"利用视图简化复杂的联结",children:[]},{level:2,title:"用视图重新格式化检索出的数据",slug:"用视图重新格式化检索出的数据",children:[]},{level:2,title:"更新视图",slug:"更新视图",children:[]}],filePathRelative:"guide/《Mysql必知必会》/第二十一章：Mysql 视图.md",git:{updatedTime:1635847604e3,contributors:[{name:"Sue-52",email:"1219243947@qq.com",commits:1}]}}},7230:(e,s,n)=>{n.r(s),n.d(s,{default:()=>i});const l=(0,n(6252).uE)('<h1 id="第二十一章-mysql-视图" tabindex="-1"><a class="header-anchor" href="#第二十一章-mysql-视图" aria-hidden="true">#</a> 第二十一章：Mysql 视图</h1><p>视图是虚拟的表。与包含数据的表不一样，视图只包含使用时动态检索数据的查询。</p><p>下面是视图的一些常见应用。</p><ul><li>重用SQL语句。</li><li>简化复杂的SQL操作。在编写查询后，可以方便地重用它而不必知道它的基本查询细节。</li><li>使用表的组成部分而不是整个表。</li><li>保护数据。可以给用户授予表的特定部分的访问权限而不是整个表的访问权限。</li><li>更改数据格式和表示。视图可返回与底层表的表示和格式不同的数据。</li></ul><p>在视图创建之后，可以用与表基本相同的方式利用它们。可以对视图执行SELECT操作，过滤和排序数据，将视图联结到其他视图或表，甚至能添加和更新数据（添加和更新数据存在某些限制。）</p><p>重要的是知道视图仅仅是用来查看存储在别处的数据的一种设施。视图本身不包含数据，因此它们返回的数据是从其他表中检索出来的。在添加或更改这些表中的数据时，视图将返回改变过的数据。</p><h2 id="规则和限制" tabindex="-1"><a class="header-anchor" href="#规则和限制" aria-hidden="true">#</a> 规则和限制</h2><p>下面是关于视图创建和使用的一些最常见的规则和限制。</p><ul><li>与表一样，视图必须唯一命名（不能给视图取与别的视图或表相同的名字）。</li><li>对于可以创建的视图数目没有限制。</li><li>为了创建视图，必须具有足够的访问权限。这些限制通常由数据库管理人员授予。</li><li>视图可以嵌套，即可以利用从其他视图中检索数据的查询来构造一个视图。</li><li>ORDER BY可以用在视图中，但如果从该视图检索数据SELECT中也含有ORDER BY，那么该视图中的ORDER BY将被覆盖。</li><li>视图不能索引，也不能有关联的触发器或默认值。</li><li>视图可以和表一起使用。例如，编写一条联结表和视图的SELECT语句。</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><ul><li>视图用<code>CREATE VIEW 视图名 AS SELECT xxx FROM 表</code>语句来创建。</li><li>使用SHOW CREATE VIEW viewname；来查看创建视图的语句。</li><li>用DROP删除视图，其语法为DROP VIEW viewname;。</li><li>更新视图时，可以先用DROP再用CREATE，也可以直接用CREATE OR REPLACE VIEW。如果要更新的视图不存在，则第2条更新语句会创建一个视图；如果要更新的视图存在，则第2条更新语句会替换原有视图。</li></ul><h2 id="利用视图简化复杂的联结" tabindex="-1"><a class="header-anchor" href="#利用视图简化复杂的联结" aria-hidden="true">#</a> 利用视图简化复杂的联结</h2><p>视图的最常见的应用之一是隐藏复杂的SQL，这通常都会涉及联结。</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>CREATE VIEW productcustomers AS\nSELECT cust_name,cust_contact,prod_id\nFROM customers c, orders o,orderitems oi\nWHERE c.cust_id = o.cust_id \nAND oi.order_num = o.order_num;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292226852.png" alt="image-20211025092422083"></p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>SHOW CREATE VIEW productcustomers;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292226853.png" alt="image-20211025092446816"></p><p>CREATE VIEW 中的内容：</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>CREATE \nALGORITHM=UNDEFINED \nDEFINER=`root`@`localhost` \nSQL SECURITY DEFINER VIEW `productcustomers` \nAS select `c`.`cust_name` \nAS `cust_name`,`c`.`cust_contact` \nAS `cust_contact`,`oi`.`prod_id` \nAS `prod_id` \nfrom ((`customers` `c` join `orders` `o`) join `orderitems` `oi`) \nwhere ((`c`.`cust_id` = `o`.`cust_id`) \nand (`oi`.`order_num` = `o`.`order_num`))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>创建可重用的视图 创建不受特定数据限制的视图是一种好办法。扩展视图的范围不仅使得它能被重用，而且甚至更有用。这样做不需要创建和维护多个类似视图。</p></blockquote><h2 id="用视图重新格式化检索出的数据" tabindex="-1"><a class="header-anchor" href="#用视图重新格式化检索出的数据" aria-hidden="true">#</a> 用视图重新格式化检索出的数据</h2><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>SELECT concat(rtrim(vend_name),&quot;(&quot;,rtrim(vend_country),&quot;)&quot;)\nAS vend_title\nFROM vendors v\nORDER BY vend_name;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292226854.png" alt="image-20211025093443020"></p><p>现在，假如经常需要这个格式的结果。不必在每次需要时执行联结，创建一个视图，每次需要时使用它即可。</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>CREATE VIEW vendorlocations AS\nSELECT concat(rtrim(vend_name),&quot;(&quot;,rtrim(vend_country),&quot;)&quot;)\nAS vend_title\nFROM vendors v\nORDER BY vend_name;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292226855.png" alt="image-20211025093616624"></p><p>过滤视图添加 WHERE 关键字进行判断</p><h2 id="更新视图" tabindex="-1"><a class="header-anchor" href="#更新视图" aria-hidden="true">#</a> 更新视图</h2><p>视图是可更新的（即，可以对它们使用INSERT、UPDATE和DELETE）。更新一个视图将更新其基表（可以回忆一下，视图本身没有数据）。如果你对视图增加或删除行，实际上是对其基表增加或删除行。</p><p>如果视图定义中有以下操作，则不能进行视图的更新：</p><ul><li>分组（使用GROUP BY和HAVING）；</li><li>联结；</li><li>子查询；</li><li>并；</li><li>聚集函数（Min()、Count()、Sum()等）；</li><li>DISTINCT；</li><li>导出（计算）列</li></ul><blockquote><p><strong>将视图用于检索</strong> 一般，应该将视图用于检索（SELECT语句）而不用于更新（INSERT、UPDATE和DELETE）。</p></blockquote>',32),a={},i=(0,n(3744).Z)(a,[["render",function(e,s){return l}]])},3744:(e,s)=>{s.Z=(e,s)=>{const n=e.__vccOpts||e;for(const[e,l]of s)n[e]=l;return n}}}]);