"use strict";(self.webpackChunkMysql_Learn=self.webpackChunkMysql_Learn||[]).push([[312],{7310:(e,n,s)=>{s.r(n),s.d(n,{data:()=>l});const l={key:"v-5ac84e00",path:"/guide/%E3%80%8AMysql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E3%80%8B/%E7%AC%AC%E5%8D%81%E5%85%AD%E7%AB%A0%EF%BC%9A%E7%BB%84%E5%90%88%E6%9F%A5%E8%AF%A2.html",title:"第十六章：组合查询",lang:"en-US",frontmatter:{title:"第十六章：组合查询",lang:"en-US"},excerpt:"",headers:[{level:2,title:"创建组合查询",slug:"创建组合查询",children:[]},{level:2,title:"UNION 使用规则",slug:"union-使用规则",children:[]},{level:2,title:"对组合查询结果排序",slug:"对组合查询结果排序",children:[]}],filePathRelative:"guide/《Mysql必知必会》/第十六章：组合查询.md",git:{updatedTime:1635847604e3,contributors:[{name:"Sue-52",email:"1219243947@qq.com",commits:1}]}}},8160:(e,n,s)=>{s.r(n),s.d(n,{default:()=>i});const l=(0,s(6252).uE)('<h1 id="第十六章-组合查询" tabindex="-1"><a class="header-anchor" href="#第十六章-组合查询" aria-hidden="true">#</a> 第十六章：组合查询</h1><p>多数SQL查询都只包含从一个或多个表中返回数据的单条SELECT语句。MySQL也允许执行多个查询（多条SELECT语句），并将结果作为单个查询结果集返回。这些组合查询通常称为并（union）或复合查询（compound query）。</p><p>有两种基本情况，其中需要使用组合查询：</p><ul><li>在单个查询中从不同的表返回类似结构的数据；</li><li>对单个表执行多个查询，按单个查询返回数据。</li></ul><blockquote><p><strong>组合查询和多个WHERE条件</strong> 多数情况下，组合相同表的两个查询完成的工作与具有多个WHERE子句条件的单条查询完成的工作相同。换句话说，任何具有多个WHERE子句的SELECT语句都可以作为一个组合查询给出。</p></blockquote><h2 id="创建组合查询" tabindex="-1"><a class="header-anchor" href="#创建组合查询" aria-hidden="true">#</a> 创建组合查询</h2><p>可用UNION操作符来组合数条SQL查询。</p><p><strong>使用 UNION：</strong></p><p>MySQL UNION 操作符语法格式：</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>SELECT expression1, expression2, ... expression_n\nFROM tables\n[WHERE conditions]\nUNION [ALL | DISTINCT]\nSELECT expression1, expression2, ... expression_n\nFROM tables\n[WHERE conditions];\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>参数:</p><ul><li>expression1, expression2, ... expression_n: 要检索的列。</li><li>tables: 要检索的数据表。</li><li>WHERE conditions: 可选， 检索条件。</li><li>DISTINCT: 可选，删除结果集中重复的数据。默认情况下 UNION 操作符已经删除了重复数据，所以 DISTINCT 修饰符对结果没啥影响。</li><li>ALL: 可选，返回所有结果集，包含重复数据。</li><li>UNION的使用很简单。所需做的只是给出每条SELECT语句，在各条语句之间放上关键字UNION。</li></ul><p><strong>UNION 只会选取不同的值。请使用 UNION ALL 来选取重复的值！</strong></p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>SELECT vend_id,prod_id,prod_price\nFROM products\nWHERE prod_price &lt;= 5;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292228565.png" alt="image-20211022165932673"></p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>SELECT vend_id,prod_id,prod_price\nFROM products\nWHERE vend_id in(1001,1002)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292228566.png" alt="image-20211022170105405"></p><h2 id="union-使用规则" tabindex="-1"><a class="header-anchor" href="#union-使用规则" aria-hidden="true">#</a> UNION 使用规则</h2><ul><li>UNION必须由两条或两条以上的SELECT语句组成,语句之间用关键字UNION分隔（因此,如果组合4条SELECT语句,将要使用3个UNION关键字）</li><li>UNION中的每个查询必须包含相同的列、表达式或聚集函数（不过各个列不需要以相同的次序列出）</li><li>列数据类型必须兼容：类型不必完全相同，但必须是DBMS可以隐含地转换的类型（例如，不同的数值类型或不同的日期类型）。</li></ul><blockquote><p><strong>UNION与WHERE</strong> UNION几乎总是完成与多个WHERE条件相同的工作。UNION ALL为UNION的一种形式，它完成WHERE子句完成不了的工作。如果确实需要每个条件的匹配行全部出现（包括重复行），则必须使用UNION ALL而不是WHERE。</p></blockquote><h2 id="对组合查询结果排序" tabindex="-1"><a class="header-anchor" href="#对组合查询结果排序" aria-hidden="true">#</a> 对组合查询结果排序</h2><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>SELECT vend_id,prod_id,prod_price\nFROM products\nWHERE prod_price &lt;= 5\nUNION ALL \nSELECT vend_id,prod_id,prod_price\nFROM products\nWHERE vend_id in(1001,1002)\nORDER BY vend_id, prod_price;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292228567.png" alt="image-20211022171420950"></p><p>这条UNION在最后一条SELECT语句后使用了ORDER BY子句。虽然ORDER BY子句似乎只是最后一条SELECT语句的组成部分，但实际上MySQL将用它来排序所有SELECT语句返回的所有结果。</p><blockquote><p>注意：UNION的组合查询还可以用字不相同的表中</p></blockquote>',25),a={},i=(0,s(3744).Z)(a,[["render",function(e,n){return l}]])},3744:(e,n)=>{n.Z=(e,n)=>{const s=e.__vccOpts||e;for(const[e,l]of n)s[e]=l;return s}}}]);