"use strict";(self.webpackChunkMysql_Learn=self.webpackChunkMysql_Learn||[]).push([[194],{2246:(t,d,e)=>{e.r(d),e.d(d,{data:()=>r});const r={key:"v-0d5a53bc",path:"/guide/%E3%80%8AMysql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E3%80%8B/%E7%AC%AC%E5%8D%81%E7%AB%A0%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0.html",title:"第十章：使用数据处理函数",lang:"en-US",frontmatter:{title:"第十章：使用数据处理函数",lang:"en-US"},excerpt:"",headers:[{level:2,title:"函数",slug:"函数",children:[]},{level:2,title:"使用函数场景",slug:"使用函数场景",children:[]},{level:2,title:"文本处理函数",slug:"文本处理函数",children:[]},{level:2,title:"日期和时间处理函数",slug:"日期和时间处理函数",children:[]},{level:2,title:"数值处理函数",slug:"数值处理函数",children:[]}],filePathRelative:"guide/《Mysql必知必会》/第十章：使用数据处理函数.md",git:{updatedTime:1635847604e3,contributors:[{name:"Sue-52",email:"1219243947@qq.com",commits:1}]}}},9836:(t,d,e)=>{e.r(d),e.d(d,{default:()=>s});const r=(0,e(6252).uE)('<h1 id="第十章-使用数据处理函数" tabindex="-1"><a class="header-anchor" href="#第十章-使用数据处理函数" aria-hidden="true">#</a> 第十章：使用数据处理函数</h1><p><strong>一般又在 where 之后的函数。</strong></p><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><p>与其他大多数计算机语言一样，SQL支持利用函数来处理数据。函数一般是在数据上执行的，它给数据的转换和处理提供了方便。</p><h2 id="使用函数场景" tabindex="-1"><a class="header-anchor" href="#使用函数场景" aria-hidden="true">#</a> 使用函数场景</h2><p>大多数SQL实现支持以下类型的函数：</p><ul><li>用于处理文本串（如删除或填充值，转换值为大写或小写）的文本函数。</li><li>用于在数值数据上进行算术操作（如返回绝对值，进行代数运算）的数值函数。</li><li>用于处理日期和时间值并从这些值中提取特定成分（例如，返回两个日期之差，检查日期有效性等）的日期和时间函数。</li><li>返回DBMS正使用的特殊信息（如返回用户登录信息，检查版本细节）的系统函数。</li></ul><h2 id="文本处理函数" tabindex="-1"><a class="header-anchor" href="#文本处理函数" aria-hidden="true">#</a> 文本处理函数</h2><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>left()</td><td>返回字符串左边的字符</td></tr><tr><td>length()</td><td>返回字符串长度</td></tr><tr><td>locate()</td><td>找出字符串的子串</td></tr><tr><td>lower()</td><td>将字符串转换为小写</td></tr><tr><td>Ltrim()</td><td>去掉字符串左边空格</td></tr><tr><td>Right()</td><td>返回字符串右边的字符</td></tr><tr><td>Rtrim()</td><td>去掉字符串右边的空格</td></tr><tr><td>soundex()</td><td>返回字符串的 SOUNDEX 值</td></tr><tr><td>substring()</td><td>返回子串的字符</td></tr><tr><td>upper()</td><td>将字符串转换为大写</td></tr></tbody></table><p>其中的 <code>SOUNDEX</code> 函数其意思为发音相似的值，当我们要获取值的时候写错了对应的值，但是发音和其类似，同样可以搜索到。</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>select upper(houseCode) from houses where length(title) = 13;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="日期和时间处理函数" tabindex="-1"><a class="header-anchor" href="#日期和时间处理函数" aria-hidden="true">#</a> 日期和时间处理函数</h2><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>AddDate()</td><td>增加一个日期（天、周等）</td></tr><tr><td>AddTime()</td><td>增加一个时间（时、分等）</td></tr><tr><td>CurDate()</td><td>返回当前日期</td></tr><tr><td>CurTime()</td><td>返回当前时间</td></tr><tr><td>Date()</td><td>返回日期时间的日期部分</td></tr><tr><td>DateDiff()</td><td>计算两个日期之差</td></tr><tr><td>Date_Add()</td><td>高度灵活的日期运算函数</td></tr><tr><td>Date_Format()</td><td>返回一个格式化的日期或者时间串</td></tr><tr><td>Day()</td><td>返回一个日期的天数部分</td></tr><tr><td>DayOfWeek()</td><td>对于一个日期，返回对应的星期几</td></tr><tr><td>Hour()</td><td>返回一个时间的小时部分</td></tr><tr><td>Minute()</td><td>返回一个时间的分钟部分</td></tr><tr><td>Month()</td><td>返回一个日期的月份部分</td></tr><tr><td>Now()</td><td>返回当前日期时间</td></tr><tr><td>Second()</td><td>返回一个时间的秒部分</td></tr><tr><td>Time()</td><td>返回一个日期时间的时间部分</td></tr><tr><td>Year()</td><td>返回一个日期的年份部分</td></tr></tbody></table><p>如果要的是日期，请使用Date() 如果你想要的仅是日期，则使用Date()是一个良好的习惯，即使你知道相应的列只包含日期也是如此。这样，如果由于某种原因表中以后有日期和时间值，你的SQL代码也不用改变。当然，也存在一个Time()函数，在你只想要时间时应该使用它。</p><p>Date()和Time()都是在MySQL 4.1.1中第一次引入的。</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>select str_to_date(&#39;20211018154706&#39;,&#39;%Y%m%d%H%i%s&#39;);\n\nselect date_format(date(&#39;2017-04-22 15:47:06&#39;),&#39;%m-%Y-%d&#39;); \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://gitee.com/sue201982/mysql/raw/master/img/202110292230212.png" alt="image-20211018164145046"></p><h2 id="数值处理函数" tabindex="-1"><a class="header-anchor" href="#数值处理函数" aria-hidden="true">#</a> 数值处理函数</h2><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>Abs()</td><td>返回一个数的绝对值</td></tr><tr><td>Cos()</td><td>返回一个角度的余弦</td></tr><tr><td>Exp()</td><td>返回一个数的指数值</td></tr><tr><td>Mod()</td><td>返回除操作的余数</td></tr><tr><td>Pi()</td><td>返回圆周率</td></tr><tr><td>Rand()</td><td>返回一个随机数</td></tr><tr><td>Sin()</td><td>返回一个角度的正弦</td></tr><tr><td>Sqrt()</td><td>返回一个数的平方根</td></tr><tr><td>Tan()</td><td>返回一个角度的正切</td></tr></tbody></table><p>这些函数一般主要用于代数、三角或几何运算，因此没有串或日期—时间处理函数的使用那么频繁。</p><p>在主要DBMS的函数中，数值函数是最一致最统一的函数。</p><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>select abs(-100) as &quot;数值&quot;;\nselect Cos(60) as &quot;余弦&quot;;\nselect Exp(60) as &quot;指数&quot;;\nselect rand()*(10-1+1)+1 as &quot;随机数&quot;;\nselect Sin(60) as &quot;正弦&quot;;\nselect Cos(60) as &quot;正切&quot;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',22),a={},s=(0,e(3744).Z)(a,[["render",function(t,d){return r}]])},3744:(t,d)=>{d.Z=(t,d)=>{const e=t.__vccOpts||t;for(const[t,r]of d)e[t]=r;return e}}}]);